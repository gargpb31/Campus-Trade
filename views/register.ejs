<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - Campus Trade</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="/" class="logo">
                    <i class="fas fa-store"></i>
                    Campus Trade
                </a>
                
                <nav>
                    <ul class="nav-menu">
                        <li><a href="/features" class="nav-link">Features</a></li>
                        <li><a href="/about" class="nav-link">About</a></li>
                        <li><a href="/login" class="nav-link btn btn-outline">Login</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="main-content">
        <div class="container">
            <div class="auth-container">
                <div class="auth-card">
                    <div class="auth-header">
                        <h1>Join Campus Trade</h1>
                        <p>Create your account and start trading with fellow students</p>
                    </div>

                    <form action="/register" method="POST" class="auth-form" id="registerForm">
                        <div class="form-group">
                            <label for="username" class="form-label">
                                <i class="fas fa-envelope"></i> Email Address
                            </label>
                            <input type="email" id="username" name="username" class="form-control" 
                                   placeholder="Enter your email" required>
                            <div class="form-text">We'll use this for account verification</div>
                        </div>

                        <div class="form-group">
                            <label for="password" class="form-label">
                                <i class="fas fa-lock"></i> Password
                            </label>
                            <div class="password-input">
                                <input type="password" id="password" name="password" class="form-control" 
                                       placeholder="Create a strong password" required>
                                <button type="button" class="password-toggle" onclick="togglePassword('password')">
                                    <i class="fas fa-eye" id="passwordIcon"></i>
                                </button>
                            </div>
                            <div class="form-text">Minimum 8 characters with letters and numbers</div>
                        </div>

                        <div class="form-group">
                            <label for="confirmPassword" class="form-label">
                                <i class="fas fa-lock"></i> Confirm Password
                            </label>
                            <div class="password-input">
                                <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" 
                                       placeholder="Confirm your password" required>
                                <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                                    <i class="fas fa-eye" id="confirmPasswordIcon"></i>
                                </button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="checkbox-group">
                                <input type="checkbox" id="terms" name="terms" required>
                                <label for="terms" class="checkbox-label">
                                    I agree to the <a href="#" class="text-primary">Terms of Service</a> and 
                                    <a href="#" class="text-primary">Privacy Policy</a>
                                </label>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary btn-lg w-full">
                                <i class="fas fa-user-plus"></i> Create Account
                            </button>
                        </div>
                    </form>

                    <div class="auth-footer">
                        <p>Already have an account? <a href="/login" class="text-primary">Sign in here</a></p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>Campus Trade</h3>
                    <p>Your trusted marketplace for campus commerce.</p>
                </div>
                <div class="footer-section">
                    <h3>Quick Links</h3>
                    <a href="/features">Features</a>
                    <a href="/about">About Us</a>
                    <a href="/login">Login</a>
                </div>
                <div class="footer-section">
                    <h3>Contact</h3>
                    <p>Email: support@campustrade.com</p>
                    <p>Phone: +91 1234567890</p>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2024 Campus Trade. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <style>
        .auth-container {
            min-height: 70vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem 0;
        }

        .auth-card {
            background: var(--bg-primary);
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-xl);
            padding: 3rem;
            max-width: 500px;
            width: 100%;
        }

        .auth-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .auth-header h1 {
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .auth-header p {
            color: var(--text-secondary);
            margin: 0;
        }

        .auth-form {
            margin-bottom: 2rem;
        }

        .password-input {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-light);
            cursor: pointer;
            padding: 0.25rem;
        }

        .password-toggle:hover {
            color: var(--text-secondary);
        }

        .checkbox-group {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }

        .checkbox-group input[type="checkbox"] {
            margin-top: 0.25rem;
            width: 1rem;
            height: 1rem;
            accent-color: var(--primary-color);
        }

        .checkbox-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            line-height: 1.5;
            cursor: pointer;
        }

        .checkbox-label a {
            text-decoration: none;
            font-weight: 500;
        }

        .checkbox-label a:hover {
            text-decoration: underline;
        }

        .auth-footer {
            text-align: center;
            border-top: 1px solid var(--border-color);
            padding-top: 1.5rem;
        }

        .auth-footer p {
            margin-bottom: 0.5rem;
        }

        .auth-footer a {
            text-decoration: none;
            font-weight: 500;
        }

        .auth-footer a:hover {
            text-decoration: underline;
        }

        .text-primary {
            color: var(--primary-color);
        }

        .w-full {
            width: 100%;
        }

        .form-error {
            color: var(--danger-color);
            font-size: 0.75rem;
            margin-top: 0.25rem;
        }

        @media (max-width: 480px) {
            .auth-card {
                padding: 2rem;
                margin: 1rem;
            }
        }
    </style>

    <script>
        function togglePassword(fieldId) {
            const passwordInput = document.getElementById(fieldId);
            const passwordIcon = document.getElementById(fieldId === 'password' ? 'passwordIcon' : 'confirmPasswordIcon');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                passwordIcon.classList.remove('fa-eye');
                passwordIcon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                passwordIcon.classList.remove('fa-eye-slash');
                passwordIcon.classList.add('fa-eye');
            }
        }

        // Form validation
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const email = document.getElementById('username').value;
            
            // Clear previous errors
            clearErrors();
            
            let hasErrors = false;
            
            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                showError('username', 'Please enter a valid email address');
                hasErrors = true;
            }
            
            // Password validation
            if (password.length < 8) {
                showError('password', 'Password must be at least 8 characters long');
                hasErrors = true;
            }
            
            if (!/(?=.*[a-zA-Z])(?=.*\d)/.test(password)) {
                showError('password', 'Password must contain both letters and numbers');
                hasErrors = true;
            }
            
            // Confirm password validation
            if (password !== confirmPassword) {
                showError('confirmPassword', 'Passwords do not match');
                hasErrors = true;
            }
            
            if (hasErrors) {
                e.preventDefault();
                return;
            }
            
            // Add loading state
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.innerHTML = '<span class="loading"></span> Creating Account...';
            submitBtn.disabled = true;
        });

        function showError(fieldId, message) {
            const field = document.getElementById(fieldId);
            const errorDiv = document.createElement('div');
            errorDiv.className = 'form-error';
            errorDiv.textContent = message;
            field.parentNode.appendChild(errorDiv);
            field.style.borderColor = 'var(--danger-color)';
        }

        function clearErrors() {
            document.querySelectorAll('.form-error').forEach(error => error.remove());
            document.querySelectorAll('.form-control').forEach(field => {
                field.style.borderColor = 'var(--border-color)';
            });
        }

        // Real-time password strength indicator
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const strengthIndicator = this.parentNode.querySelector('.password-strength') || 
                                    createStrengthIndicator(this.parentNode);
            
            let strength = 0;
            let message = '';
            
            if (password.length >= 8) strength++;
            if (/[a-z]/.test(password)) strength++;
            if (/[A-Z]/.test(password)) strength++;
            if (/\d/.test(password)) strength++;
            if (/[^A-Za-z0-9]/.test(password)) strength++;
            
            switch(strength) {
                case 0:
                case 1:
                    message = 'Very Weak';
                    strengthIndicator.className = 'password-strength weak';
                    break;
                case 2:
                    message = 'Weak';
                    strengthIndicator.className = 'password-strength weak';
                    break;
                case 3:
                    message = 'Fair';
                    strengthIndicator.className = 'password-strength fair';
                    break;
                case 4:
                    message = 'Good';
                    strengthIndicator.className = 'password-strength good';
                    break;
                case 5:
                    message = 'Strong';
                    strengthIndicator.className = 'password-strength strong';
                    break;
            }
            
            strengthIndicator.textContent = message;
        });

        function createStrengthIndicator(container) {
            const indicator = document.createElement('div');
            indicator.className = 'password-strength';
            container.appendChild(indicator);
            return indicator;
        }
    </script>

    <style>
        .password-strength {
            font-size: 0.75rem;
            margin-top: 0.25rem;
            font-weight: 500;
        }

        .password-strength.weak {
            color: var(--danger-color);
        }

        .password-strength.fair {
            color: var(--warning-color);
        }

        .password-strength.good {
            color: var(--info-color);
        }

        .password-strength.strong {
            color: var(--success-color);
        }
    </style>
</body>
</html>
 

